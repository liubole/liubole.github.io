{"meta":{"title":"夜色黎明","subtitle":"","description":"知止 知足 知皈","author":"Tricolor","url":"https://liubole.github.io"},"posts":[{"title":"找出毒药","slug":"老鼠找毒药","date":"2021-08-19T03:20:44.000Z","updated":"2021-08-20T06:35:33.307Z","comments":true,"path":"2021/08/19/老鼠找毒药/","link":"","permalink":"https://liubole.github.io/2021/08/19/%E8%80%81%E9%BC%A0%E6%89%BE%E6%AF%92%E8%8D%AF/","excerpt":"","text":"一、8瓶药里1瓶毒药，至少需要多少老鼠老鼠找出毒药的一般问题类型是m瓶药，其中一瓶是毒药，用n只老鼠来检测，求n最小多少。 问题的最小规模是8瓶药，3只老鼠。明面和暗含的条件有 m瓶药里只有一瓶毒药； 毒药立马发作； 所有老鼠同时喝药； 答案是2^3=8，故3只老鼠即可。具体方案是：瓶子0-7号（0号瓶所有老鼠都不喝。如果M1 M2 M3都没死，那0号就是毒药）： 鼠M1: 1+3+5+7 鼠M2: 2+3+6+7 鼠M3: 4+5+6+7 方案的本质是，每只老鼠都喝4瓶药，且任意两只老鼠喝的药有且只有2瓶是一样的。所以下面方案也可以： 鼠M1: 0+1+4+5 鼠M2: 0+2+4+6 鼠M3: 0+3+5+6 鼠M1: 1+4+5+7 鼠M2: 2+4+6+7 鼠M3: 3+5+6+7 鼠M1: 1+4+6+7 鼠M2: 2+4+5+7 鼠M3: 3+6+5+7 鼠M1: 1+4+6+0 鼠M2: 2+4+5+0 鼠M3: 3+6+5+0 采用二进制来理解的方案，图示如下： 表1： 鼠↓ 瓶→ 0号 1号 2号 3号 4号 5号 6号 7号 鼠M1 0 1 0 1 0 1 0 1 鼠M2 0 0 1 1 0 0 1 1 鼠M3 0 0 0 0 1 1 1 1 二、1000瓶药里1瓶毒药，喝药15分见效，总共60分种，至少需要多少老鼠如果按前面的思路，一次性找出毒药需要 $\\lceil \\log_2{1000} \\rceil$=10只老鼠没问题，可是60分钟内找出的毒药该如何解？我们可以使用n维坐标系分析，或者使用n进制给瓶子编号，这里的n指的是喝药次数+1。 采用三进制来理解的方案，图示如下： 表2： 鼠↓ 瓶→ 0号 1号 2号 3号 4号 5号 6号 7号 8号 鼠M1 0 1 2 0 1 2 0 1 2 鼠M2 0 0 0 1 1 1 2 2 2 从上面可以推测出，n瓶药里有1瓶毒药，喝药见效时间pt，总时间t，需要老鼠的通用公式为：喝的轮数 c = $\\lfloor t/pt \\rfloor$需要老鼠 m = $\\lceil \\log_{c+1}{n} \\rceil$ 三、1000瓶药里1瓶毒药，喝药15分见效，总共60分种，用最少的老鼠写出老鼠喝药的具体方案从表2可以得出，正常情况下（最后一轮才出现老鼠死亡的情况）喝药方案： 表2： 第一轮 第二轮 M1 0+3+6 1+4+7 M2 0+1+2 3+4+5 如果中途出现老鼠死亡，剩下的老鼠去喝可能导致死亡的药即可（递归）。 喝药方案代码如下，考虑到中途可能有减员，故只给出了前两轮喝药方案： func bottleToCheck(die []int, live []int, ret map[int][]uint64) []uint64 &#123; sDie := make([]uint64, 0) sLive := make([]uint64, 0) for _, v := range die &#123; sDie = append(sDie, ret[v]...) &#125; for _, v := range live &#123; sLive = append(sLive, ret[v]...) &#125; inArray := func(i uint64, arr []uint64) bool &#123; for _, v := range arr &#123; if v == i &#123; return true &#125; &#125; return false &#125; rt := make([]uint64, 0) for _, v := range sDie &#123; if inArray(v, sLive) &#123; continue &#125; rt = append(rt, v) &#125; return rt &#125; func rSolution(bottle/*需要检测的瓶子*/ []uint64, mouse/*剩余老鼠编号*/ []int, k/*计算第k轮的喝药方案*/ int, n/**进制*/ int) map[int][]uint64 &#123; solution := make(map[int][]uint64) strRightAt := func(str string, at int) int &#123; var i int if len(str)-at-1 三、1000瓶药里2瓶毒药，喝药15分见效，总共60分种，用最少的老鼠写出老鼠喝药的具体方案todo","raw":null,"content":null,"categories":[],"tags":[]},{"title":"markdown样式","slug":"markdown样式","date":"2021-08-18T02:19:44.000Z","updated":"2021-08-20T06:40:08.325Z","comments":true,"path":"2021/08/18/markdown样式/","link":"","permalink":"https://liubole.github.io/2021/08/18/markdown%E6%A0%B7%E5%BC%8F/","excerpt":"","text":"h1 Headingh2 Headingh3 Headingh4 Headingh5 Headingh6 HeadingHorizontal Rules EmphasisThis is bold text This is bold text This is italic text This is italic text Strikethrough Blockquotes Blockquotes can also be nested… …by using additional greater-than signs right next to each other… …or with spaces between arrows. ListsUnordered Create a list by starting a line with +, -, or * Sub-lists are made by indenting 2 spaces: Marker character change forces new list start: Ac tristique libero volutpat at Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Very easy! Ordered Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa You can use sequential numbers… …or keep all the numbers as 1. Start numbering with offset: foo bar CodeInline code Indented code 1234// Some commentsline 1 of codeline 2 of codeline 3 of code Block code “fences” 1Sample text here... Syntax highlighting 12345var foo = function (bar) &#123; return bar++;&#125;;console.log(foo(5)); Tables Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. et extension to be used for dest files. Right aligned columns Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. Linkslink text Images Emojies😄 😆 😵 😭 😰 😅 😢 😤 😍 😌👍 👎 💯 👏 🔔 🎁 ❓ 💣 ❤️ ☕️ 🌀 🙇 💋 🙏 💢 Task task 1 task 2 task 3 Hide details Abstract Here are the details. mathematical formulasMultiline formula block： $$\\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} = 1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {1+\\frac{e^{-6\\pi}}{1+\\frac{e^{-8\\pi}}{1+\\cdots}}}} $$ Inline formula： formula $a^2 + b^2 = \\color{red}c^2$ mind maps1234567- demo- Heading - Emphasis - Blockquotes - Lists - Code - Tables Gantt charts123456789gantt title A Gantt Diagram dateFormat YYYY-MM-DD section Section A task :a1, 2019-01-01, 30d Another task :after a1 , 20d section Another Task in sec :2019-01-12 , 12d another task : 24d timing charts12345sequenceDiagram Alice-&gt;&gt;John: Hello John, how are you? loop Every minute John--&gt;&gt;Alice: Great! end charts12345678910111213141516171819&#123; &quot;title&quot;: &#123; &quot;text&quot;: &quot;30 day&quot; &#125;, &quot;tooltip&quot;: &#123; &quot;trigger&quot;: &quot;axis&quot;, &quot;axisPointer&quot;: &#123; &quot;lineStyle&quot;: &#123; &quot;width&quot;: 0 &#125; &#125; &#125;, &quot;legend&quot;: &#123; &quot;data&quot;: [ &quot;user&quot;] &#125;, &quot;xAxis&quot;: [&#123; &quot;type&quot;: &quot;category&quot;, &quot;boundaryGap&quot;: false, &quot;data&quot;: [&quot;2019-05-08&quot;,&quot;2019-05-09&quot;,&quot;2019-05-10&quot;,&quot;2019-05-11&quot;,&quot;2019-05-12&quot;,&quot;2019-05-13&quot;,&quot;2019-05-14&quot;,&quot;2019-05-15&quot;,&quot;2019-05-16&quot;,&quot;2019-05-17&quot;,&quot;2019-05-18&quot;,&quot;2019-05-19&quot;,&quot;2019-05-20&quot;,&quot;2019-05-21&quot;,&quot;2019-05-22&quot;,&quot;2019-05-23&quot;,&quot;2019-05-24&quot;,&quot;2019-05-25&quot;,&quot;2019-05-26&quot;,&quot;2019-05-27&quot;,&quot;2019-05-28&quot;,&quot;2019-05-29&quot;,&quot;2019-05-30&quot;,&quot;2019-05-31&quot;,&quot;2019-06-01&quot;,&quot;2019-06-02&quot;,&quot;2019-06-03&quot;,&quot;2019-06-04&quot;,&quot;2019-06-05&quot;,&quot;2019-06-06&quot;,&quot;2019-06-07&quot;], &quot;axisTick&quot;: &#123; &quot;show&quot;: false &#125;, &quot;axisLine&quot;: &#123; &quot;show&quot;: false &#125; &#125;], &quot;yAxis&quot;: [&#123; &quot;type&quot;: &quot;value&quot;, &quot;axisTick&quot;: &#123; &quot;show&quot;: false &#125;, &quot;axisLine&quot;: &#123; &quot;show&quot;: false &#125;, &quot;splitLine&quot;: &#123; &quot;lineStyle&quot;: &#123; &quot;color&quot;: &quot;rgba(0, 0, 0, .38)&quot;, &quot;type&quot;: &quot;dashed&quot; &#125; &#125; &#125;], &quot;series&quot;: [ &#123; &quot;name&quot;: &quot;user&quot;, &quot;type&quot;: &quot;line&quot;, &quot;smooth&quot;: true, &quot;itemStyle&quot;: &#123; &quot;color&quot;: &quot;#f1e05a&quot; &#125;, &quot;areaStyle&quot;: &#123; &quot;normal&quot;: &#123;&#125; &#125;, &quot;z&quot;: 2, &quot;data&quot;: [&quot;31&quot;,&quot;33&quot;,&quot;30&quot;,&quot;23&quot;,&quot;16&quot;,&quot;29&quot;,&quot;23&quot;,&quot;37&quot;,&quot;41&quot;,&quot;29&quot;,&quot;16&quot;,&quot;13&quot;,&quot;39&quot;,&quot;23&quot;,&quot;38&quot;,&quot;136&quot;,&quot;89&quot;,&quot;35&quot;,&quot;22&quot;,&quot;50&quot;,&quot;57&quot;,&quot;47&quot;,&quot;36&quot;,&quot;59&quot;,&quot;14&quot;,&quot;23&quot;,&quot;46&quot;,&quot;44&quot;,&quot;51&quot;,&quot;43&quot;,&quot;0&quot;] &#125; ]&#125; graphviz rendering123456789101112131415digraph finite_state_machine &#123; rankdir=LR; size=&quot;8,5&quot; node [shape = doublecircle]; S; node [shape = point ]; qi node [shape = circle]; qi -&gt; S; S -&gt; q1 [ label = &quot;a&quot; ]; S -&gt; S [ label = &quot;a&quot; ]; q1 -&gt; S [ label = &quot;a&quot; ]; q1 -&gt; q2 [ label = &quot;ddb&quot; ]; q2 -&gt; q1 [ label = &quot;b&quot; ]; q2 -&gt; q2 [ label = &quot;b&quot; ];&#125; Flowchart12345678st=&gt;start: Startop=&gt;operation: Your Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op","raw":null,"content":null,"categories":[],"tags":[]},{"title":"测试标题","slug":"测试标题","date":"2020-04-15T06:59:44.000Z","updated":"2021-08-20T06:06:51.616Z","comments":true,"path":"2020/04/15/测试标题/","link":"","permalink":"https://liubole.github.io/2020/04/15/%E6%B5%8B%E8%AF%95%E6%A0%87%E9%A2%98/","excerpt":"","text":"hello，测试内容","raw":null,"content":null,"categories":[],"tags":[]}]}